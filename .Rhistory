colnames(summ_table_v3) <- gsub("Groups: ","",colnames(summ_table_v3))
# Now create table for multiple comps
print(summ_table_v3, markup="markdown")
# Quickly see which variables have missing values
# dataset_v2 %>% select(FYI.Age,Child_Race_Final,Gender,Groups,Father_Educ_Final_Cat,Father_Race_Final,
#                       Mother_educ_final_cat, Mother_Race_Final,Site)
#  summary()
## Create summary table objects
# Summary stats
dataset_sum_all_v0 <- dataset_v2_all %>%
mutate(Missing_Group=plyr::revalue(Missing_Group,c("0"="No Missing",
"1"="Some Missing")) %>%
fct_relevel("Some Missing", "No Missing"),
Child_Race_Coded=plyr::revalue(Child_Race_Coded, c("African_American"="Black",
"hispanic"="Hispanic",
"More_than_one_race"="Other",
"non_hispanic"="White")) %>%
fct_relevel("Black","Hispanic","Other","White"),
Group_NoRisk=plyr::revalue(Groups,c("HR_typ"="Neg",
"HR_ASD"="ASD",
"HR_Atyp"="Neg",
"HR_Neg"="Neg",
"LR"="Neg",
"LR_Atyp"="Neg",
"LRASD"="ASD")) %>%
fct_relevel("ASD", "Neg"),
Groups_NoAtyp=plyr::revalue(Groups,c("HR_typ"="High Risk: No ASD",
"HR_Atyp"="High Risk: No ASD",
"HR_ASD"="High Risk: ASD",
"HR_Neg"="High Risk: No ASD",
"LR"="Low Risk",
"LR_Atyp"="Low Risk",
"LRASD"="Low Risk")) %>%
fct_relevel("High Risk: ASD", "High Risk: No ASD", "Low Risk"),
Father_Educ_Final_Cat=plyr::revalue(Father_Educ_Final_Cat,c("Coll"="Some College",
"Grad"="College Graduate",
"HS"="High School Graduate"))%>%
fct_relevel("High School Graduate", "Some College"),
Mother_educ_final_cat=plyr::revalue(Mother_educ_final_cat,c("Coll"="Some College",
"Grad"="College Graduate",
"HS"="High School Graduate"))%>%
fct_relevel("High School Graduate", "Some College"),
Site=plyr::revalue(Site,c("UNC"="Chapel Hill",
"PHI"="Philadelphia",
"SEA"="Seattle",
"STL"="St. Louis"))%>%
fct_relevel("Chapel Hill"),
V12.fyi_person_filling_out=plyr::revalue(V12.fyi_person_filling_out,c("both"="Both",
"father"="Father",
"mother"="Mother"))%>%
fct_relevel("Father", "Mother"))
for(i in 1:length(levels(dataset_sum_all_v0$Groups_NoAtyp))){
dataset_sum_all <- dataset_sum_all_v0 %>%
filter(Groups_NoAtyp==levels(dataset_sum_all_v0$Groups_NoAtyp)[i])
var_label(dataset_sum_all) <- list(FYI.Age="Age at completion of FYI",
V12.Child.Age="Age at Month 12 Clinic Visit",
V12.mullen_composite_standard_score="12 Month MSEL ELC (standard score)",
V12.mullen_expressive_language_t="12 Month MSEL Expressive Language (t score)",
V12.mullen_fine_motor_t="12 Month MSEL Fine Motor (t score)",
V12.mullen_receptive_language_t="12 Month MSEL Receptive Language (t score)",
V12.mullen_visual_reception_t="12 Month MSEL Visual Reception (t score)",
V12.aosi_total_score_1_18="12 Month AOSI Total Score",
V24.Child.Age="Age at Month 24 Clinic Visit",
V24.mullen_composite_standard_score="24 Month MSEL ELC (standard score)",
V24.mullen_expressive_language_t="24 Month MSEL Expressive Language (t score)",
V24.mullen_fine_motor_t="24 Month MSEL Fine Motor (t score)",
V24.mullen_receptive_language_t="24 Month MSEL Receptive Language (t score)",
V24.mullen_visual_reception_t="24 Month MSEL Visual Reception (t score)",
V24.ADOS_Derived_severity_score_lookup="24 Month ADOS Severity Score",
V12.fyi_person_filling_out="Primary Respondent of FYI",
Gender="Gender",
Child_Race_Coded="Child Race",
Father_Educ_Final_Cat="Father's Highest Level of Education",
Mother_educ_final_cat="Mother's Highest Level of Education",
Site="Site")
vars_of_interest <- c("FYI.Age",
"V12.Child.Age",
sort(names(dataset_sum_all)[grepl("V12.mullen", names(dataset_sum_all))]),
"V12.aosi_total_score_1_18",
"V24.Child.Age",
sort(names(dataset_sum_all)[grepl("V24.mullen", names(dataset_sum_all))]),
"V24.ADOS_Derived_severity_score_lookup",
"V12.fyi_person_filling_out","Gender","Child_Race_Coded",
"Father_Educ_Final_Cat","Mother_educ_final_cat","Site")
table_v0 <- CreateTableOne(vars = vars_of_interest,
strata = "Missing_Group", data=dataset_sum_all)
# Now create table
# write.csv(print(table_v0, catDigits = 1, varLabels = TRUE, exact="Child_Race_Coded"),
#           file=paste("Compare_responders_",gsub("[ :]","_",
#                                                levels(dataset_sum_all_v0$Groups_NoAtyp)[i]),".csv",sep=""))
}
dataset_sum_v2 <- dataset_sum %>%
mutate(Groups=fct_relevel(Groups, "Low Risk", "High Risk: ASD",
"High Risk: Atypical",
"High Risk: Typical"),
Groups_NoAtyp=fct_relevel(Groups_NoAtyp, "Low Risk", "High Risk: ASD",
"High Risk: No ASD"),
respond_educ=ifelse(V12.fyi_person_filling_out=="mother",
Mother_educ_final_cat,
ifelse(V12.fyi_person_filling_out=="father",
Father_Educ_Final_Cat,
pmax(Mother_educ_final_cat,
Father_Educ_Final_Cat))) %>%
factor() %>% plyr::revalue(c("1"="HS","2"="Coll","3"="Grad")))
## Social Comm
# Get means and CIs
soc_com_anova <- lm(V12.fyi_soc_com_risk~Groups_NoAtyp, data=dataset_sum_v2)
soc_com_for_table <- as.data.frame(lsmeans(soc_com_anova, specs="Groups_NoAtyp"))
soc_com_for_table <- soc_com_for_table %>%
mutate(Mean_SE=paste(round(lsmean,2),
paste("(",round(lower.CL,2),", ",round(upper.CL,2),")",sep=""),sep=" "))  %>%
select(Groups_NoAtyp, Mean_SE)
soc_com_for_table <- t(soc_com_for_table)
colnames(soc_com_for_table) <- soc_com_for_table[1,]
soc_com_for_table <- soc_com_for_table[-1,]
soc_com_for_table <- c("Domain"="Social Communication", soc_com_for_table)
## Sensory Reg
# Get means and CIs
sens_reg_anova <- lm(V12.fyi_sen_reg_risk~Groups_NoAtyp, data=dataset_sum_v2)
sens_reg_for_table <- as.data.frame(lsmeans(sens_reg_anova, specs="Groups_NoAtyp"))
sens_reg_for_table <- sens_reg_for_table %>%
mutate(Mean_SE=paste(round(lsmean,2),
paste("(",round(lower.CL,2),", ",round(upper.CL,2),")",sep=""),sep=" ")) %>%
select(Groups_NoAtyp, Mean_SE)
sens_reg_for_table <- t(sens_reg_for_table)
colnames(sens_reg_for_table) <- sens_reg_for_table[1,]
sens_reg_for_table <- sens_reg_for_table[-1,]
sens_reg_for_table <- c("Domain"="Sensory Regulation", sens_reg_for_table)
## Total Risk
# Get means and CIs
tot_risk_anova <- lm(V12.fyi_risk_score~Groups_NoAtyp,
data=dataset_sum_v2)
tot_risk_for_table <- as.data.frame(lsmeans(tot_risk_anova, specs="Groups_NoAtyp"))
tot_risk_for_table <- tot_risk_for_table %>%
mutate(Mean_SE=paste(round(lsmean,2),
paste("(",round(lower.CL,2),", ",round(upper.CL,2),")",sep=""),sep=" ")) %>%
select(Groups_NoAtyp, Mean_SE)
tot_risk_for_table <- t(tot_risk_for_table)
colnames(tot_risk_for_table) <- tot_risk_for_table[1,]
tot_risk_for_table <- tot_risk_for_table[-1,]
tot_risk_for_table <- c("Domain"="Total Risk Score", tot_risk_for_table)
## Calculate overall F tests for each domain
soc_com_f_stat <- paste( round(anova(soc_com_anova)$`F value`[1],2),
paste("(",anova(soc_com_anova)$Df[1],",",
anova(soc_com_anova)$Df[2],")", sep=""), sep=" ")
sens_reg_f_stat <- paste( round(anova(sens_reg_anova)$`F value`[1],2),
paste("(",anova(sens_reg_anova)$Df[1],",",
anova(sens_reg_anova)$Df[2],")", sep=""), sep=" ")
total_risk_f_stat <- paste( round(anova(tot_risk_anova)$`F value`[1],2),
paste("(",anova(tot_risk_anova)$Df[1],",",
anova(tot_risk_anova)$Df[2],")", sep=""), sep=" ")
soc_com_f_test <- ifelse(anova(soc_com_anova)$`Pr(>F)`[1]>0.001,
round(anova(soc_com_anova)$`Pr(>F)`[1],3),"<0.001")
sens_reg_f_test <- ifelse(anova(sens_reg_anova)$`Pr(>F)`[1]>0.001,
round(anova(sens_reg_anova)$`Pr(>F)`[1],3),"<0.001")
total_risk_f_test <- ifelse(anova(tot_risk_anova)$`Pr(>F)`[1]>0.001,
round(anova(tot_risk_anova)$`Pr(>F)`[1],1),"<0.001")
## Combine into single table
anova_table <- rbind(soc_com_for_table, sens_reg_for_table, tot_risk_for_table)
anova_table <- cbind(anova_table,
"F Statistic"=c(soc_com_f_stat,
sens_reg_f_stat, total_risk_f_stat),
"P-value"=c(soc_com_f_test, sens_reg_f_test,
total_risk_f_test))
## Add in multiple comps
rownames(anova_table) <- NULL
# Create function to calculate Cohen's D
calc_cohens_d <- function(outcome,group_var,data,order){
# Create matrix to house comparisons, in proper order
data_group_var <- data %>% select_(group_var) %>% as.matrix() %>% factor()
group_levels <- factor(levels(data_group_var)) %>%
fct_relevel(order)
group_levels <- group_levels[order(group_levels)]
group_df <- data.frame(A=group_levels, B=group_levels)
G <- data.frame(expand.grid(group_df))
G <- G[,2:1]
delete_rows <- which(G$B==G$A)
G <- G[-delete_rows,]
G <- G[!duplicated(t(apply(G, 1, sort))),]
G <- data.frame(lapply(G, as.character), stringsAsFactors = F)
G_names <- paste(G$B, G$A, sep=" vs ")
Cohen_D_results <- list(NA)
# Create Cohen's D for each row in G
for(i in 1:dim(G)[1]){
l <- paste(group_var, "==", "'" ,G[i,1], "'", "|",
group_var, "==", "'" ,G[i,2], "'", sep="")
data_loop <- data %>%
filter_(l) %>%
select_(group_var, outcome) %>%
as.data.frame()
data_loop[,group_var] <- factor(data_loop[,group_var])
cohen_d_frmla <- as.formula(paste(outcome, group_var, sep=" ~ "))
Cohen_D_results[[i]] <- round(cohensD(cohen_d_frmla, data=data_loop), 3)
}
names(Cohen_D_results) <- G_names
return(Cohen_D_results)
}
order_cohen <- c("Low Risk", "High Risk: ASD", "High Risk: No ASD")
soc_com_pairwise <- pairwise.t.test(dataset_sum_v2$V12.fyi_soc_com_risk,
dataset_sum_v2$Groups_NoAtyp)$p.value
soc_com_pairwise_vector <- ifelse(as.vector(soc_com_pairwise)<0.001,
"<0.001",
round(as.vector(soc_com_pairwise),3))
#
sens_reg_pairwise <- pairwise.t.test(dataset_sum_v2$V12.fyi_sen_reg_risk,
dataset_sum_v2$Groups_NoAtyp)$p.value
sens_reg_pairwise_vector <- ifelse(as.vector(sens_reg_pairwise)<0.001,
"<0.001",
round(as.vector(sens_reg_pairwise),3))
#
tot_risk_pairwise <- pairwise.t.test(dataset_sum_v2$V12.fyi_risk_score,
dataset_sum_v2$Groups_NoAtyp)$p.value
tot_risk_pairwise_vector <- ifelse(as.vector(tot_risk_pairwise)<0.001,
"<0.001",
round(as.vector(tot_risk_pairwise),3))
# Add in Cohen's D
soc_com_cohens_d <- calc_cohens_d(outcome="V12.fyi_soc_com_risk",
group_var = "Groups_NoAtyp",
data=dataset_sum_v2,
order=order_cohen)
soc_com_cohens_d_vector <- unlist(soc_com_cohens_d)
#
sens_reg_cohens_d <- calc_cohens_d(outcome="V12.fyi_sen_reg_risk",
group_var = "Groups_NoAtyp",
data=dataset_sum_v2,
order=order_cohen)
sens_reg_cohens_d_vector <- unlist(sens_reg_cohens_d)
#
tot_risk_cohens_d <- calc_cohens_d(outcome="V12.fyi_risk_score",
group_var = "Groups_NoAtyp",
data=dataset_sum_v2,
order=order_cohen)
tot_risk_cohens_d_vector <- unlist(tot_risk_cohens_d)
#
cohens_d_table <- rbind(soc_com_cohens_d_vector, sens_reg_cohens_d_vector,
tot_risk_cohens_d_vector)
pairwise_anova <- rbind(soc_com_pairwise_vector, sens_reg_pairwise_vector, tot_risk_pairwise_vector)
colnames(pairwise_anova) <- c(paste(colnames(soc_com_pairwise)[1], rownames(soc_com_pairwise), sep=" vs "), paste(colnames(soc_com_pairwise)[2], rownames(soc_com_pairwise), sep=" vs "))
rownames(pairwise_anova) <- NULL
pairwise_anova <- t(t(pairwise_anova)[complete.cases(t(pairwise_anova)),])
pairwise_anova[] <- paste(pairwise_anova,
paste("(",cohens_d_table, ")",sep=""),
sep=" ")
anova_table_final <- cbind(anova_table, pairwise_anova)
kable(anova_table_final,
col.names = colnames(anova_table_final),
caption="Comparison of group means from regression of domain risk score on diagnosis group.  Estimated group means and their corresponding standard errors (SE), rounded to two decimal spaces, are provided for each domain.  These comparisons were done for Social Communication and Sensory Regulation domains and Total Risk Score.  For each of these, the p-value and test statistic corresponding to the ANOVA F-test for group differences is reported with degrees of freedom for the F statistic in paretheses, along with the p-values for the post-hoc pairwise comparisons.  The Holm adjustment was used for these pairwise comparisons to correct for multiple comparisons.  Cohen's D effect size is also reported in parentheses for each of these comparisons. ") %>%
kable_styling()
## Social Comm
# Get means and CIs
soc_com_anova <- lm(V12.fyi_soc_com_risk~Groups_NoAtyp+respond_educ, data=dataset_sum_v2)
soc_com_for_table <- as.data.frame(lsmeans(soc_com_anova, specs="Groups_NoAtyp",
at=list(respond_educ="Coll")))
soc_com_for_table <- soc_com_for_table %>%
mutate(Mean_SE=paste(round(lsmean,2),
paste("(",round(lower.CL,2),", ",round(upper.CL,2),")",sep=""),sep=" "))  %>%
select(Groups_NoAtyp, Mean_SE)
soc_com_for_table <- t(soc_com_for_table)
colnames(soc_com_for_table) <- soc_com_for_table[1,]
soc_com_for_table <- soc_com_for_table[-1,]
soc_com_for_table <- c("Domain"="Social Communication", soc_com_for_table)
## Sensory Reg
# Get means and CIs
sens_reg_anova <- lm(V12.fyi_sen_reg_risk~Groups_NoAtyp+respond_educ, data=dataset_sum_v2)
sens_reg_for_table <- as.data.frame(lsmeans(sens_reg_anova, specs="Groups_NoAtyp",
at=list(respond_educ="Coll")))
sens_reg_for_table <- sens_reg_for_table %>%
mutate(Mean_SE=paste(round(lsmean,2),
paste("(",round(lower.CL,2),", ",round(upper.CL,2),")",sep=""),sep=" ")) %>%
select(Groups_NoAtyp, Mean_SE)
sens_reg_for_table <- t(sens_reg_for_table)
colnames(sens_reg_for_table) <- sens_reg_for_table[1,]
sens_reg_for_table <- sens_reg_for_table[-1,]
sens_reg_for_table <- c("Domain"="Sensory Regulation", sens_reg_for_table)
## Total Risk
# Get means and CIs
tot_risk_anova <- lm(V12.fyi_risk_score~Groups_NoAtyp+respond_educ,
data=dataset_sum_v2)
tot_risk_for_table <- as.data.frame(lsmeans(tot_risk_anova, specs="Groups_NoAtyp",
at=list(respond_educ="Coll")))
tot_risk_for_table <- tot_risk_for_table %>%
mutate(Mean_SE=paste(round(lsmean,2),
paste("(",round(lower.CL,2),", ",round(upper.CL,2),")",sep=""),sep=" ")) %>%
select(Groups_NoAtyp, Mean_SE)
tot_risk_for_table <- t(tot_risk_for_table)
colnames(tot_risk_for_table) <- tot_risk_for_table[1,]
tot_risk_for_table <- tot_risk_for_table[-1,]
tot_risk_for_table <- c("Domain"="Total Risk Score", tot_risk_for_table)
## Calculate overall F tests for each domain
soc_com_f_stat <- paste( round(anova(soc_com_anova)$`F value`[1],2),
paste("(",anova(soc_com_anova)$Df[1],",",
anova(soc_com_anova)$Df[3],")", sep=""), sep=" ")
sens_reg_f_stat <- paste( round(anova(sens_reg_anova)$`F value`[1],2),
paste("(",anova(sens_reg_anova)$Df[1],",",
anova(sens_reg_anova)$Df[3],")", sep=""), sep=" ")
total_risk_f_stat <- paste( round(anova(tot_risk_anova)$`F value`[1],2),
paste("(",anova(tot_risk_anova)$Df[1],",",
anova(tot_risk_anova)$Df[3],")", sep=""), sep=" ")
soc_com_f_test <- ifelse(anova(soc_com_anova)$`Pr(>F)`[1]>0.001,
round(anova(soc_com_anova)$`Pr(>F)`[1],3),"<0.001")
sens_reg_f_test <- ifelse(anova(sens_reg_anova)$`Pr(>F)`[1]>0.001,
round(anova(sens_reg_anova)$`Pr(>F)`[1],3),"<0.001")
total_risk_f_test <- ifelse(anova(tot_risk_anova)$`Pr(>F)`[1]>0.001,
round(anova(tot_risk_anova)$`Pr(>F)`[1],1),"<0.001")
## Combine into single table
anova_table <- rbind(soc_com_for_table, sens_reg_for_table, tot_risk_for_table)
anova_table <- cbind(anova_table,
"F Statistic"=c(soc_com_f_stat,
sens_reg_f_stat, total_risk_f_stat),
"P-value"=c(soc_com_f_test, sens_reg_f_test,
total_risk_f_test))
## Add in multiple comps
rownames(anova_table) <- NULL
Contrasts = list(Low_Risk_vs_High_Risk__ASD = c(1,  -1,  0),
Low_Risk_vs_High_Risk__No_ASD = c(1,  0,  -1),
High_Risk__ASD_vs_High_Risk__No_ASD = c( 0,  1, -1))
soc_com_pairwise_obj <- contrast(lsmeans(soc_com_anova, "Groups_NoAtyp",
at=list(respond_educ="Coll")),
Contrasts,
adjust = "holm")
soc_com_pairwise <- as.data.frame(summary(soc_com_pairwise_obj))[,c("contrast",                                                               "p.value")]
soc_com_pairwise_vector <- ifelse(soc_com_pairwise$p.value<0.001, "<0.001",
round(soc_com_pairwise$p.value, 3))
sens_reg_pairwise_obj <- contrast(lsmeans(sens_reg_anova, "Groups_NoAtyp",
at=list(respond_educ="Coll")),
Contrasts,
adjust = "holm")
sens_reg_pairwise <- as.data.frame(summary(sens_reg_pairwise_obj))[,c("contrast",                                                               "p.value")]
sens_reg_pairwise_vector <- ifelse(sens_reg_pairwise$p.value<0.001, "<0.001",
round(sens_reg_pairwise$p.value, 3))
tot_risk_pairwise_obj <- contrast(lsmeans(tot_risk_anova, "Groups_NoAtyp",
at=list(respond_educ="Coll")),
Contrasts,
adjust = "holm")
tot_risk_pairwise <- as.data.frame(summary(tot_risk_pairwise_obj))[,c("contrast",                                                               "p.value")]
tot_risk_pairwise_vector <- ifelse(tot_risk_pairwise$p.value<0.001, "<0.001",
round(tot_risk_pairwise$p.value, 3))
pairwise_anova <- rbind(soc_com_pairwise_vector, sens_reg_pairwise_vector, tot_risk_pairwise_vector)
colnames(pairwise_anova) <- gsub("  ", ": ",
gsub("_"," ",soc_com_pairwise$contrast))
rownames(pairwise_anova) <- NULL
# Calculate Cohen's D using difference in means divided by residual SE
soc_com_resid_SE <- sqrt(anova(soc_com_anova)$`Mean Sq`[3])
soc_com_cohens_d_vector <-
round(abs(as.numeric(as.matrix(summary(soc_com_pairwise_obj))[,"estimate"])/soc_com_resid_SE),3)
#
sens_reg_resid_SE <- sqrt(anova(sens_reg_anova)$`Mean Sq`[3])
sens_reg_cohens_d_vector <-
round(abs(as.numeric(as.matrix(summary(sens_reg_pairwise_obj))[,"estimate"])/sens_reg_resid_SE),3)
#
tot_risk_resid_SE <- sqrt(anova(tot_risk_anova)$`Mean Sq`[3])
tot_risk_cohens_d_vector <-
round(abs(as.numeric(as.matrix(summary(tot_risk_pairwise_obj))[,"estimate"])/tot_risk_resid_SE),3)
cohens_d_table <- rbind(soc_com_cohens_d_vector, sens_reg_cohens_d_vector,
tot_risk_cohens_d_vector)
pairwise_anova[] <- paste(pairwise_anova,
paste("(",cohens_d_table, ")",sep=""),
sep=" ")
anova_table <- cbind(anova_table, pairwise_anova)
kable(anova_table,
col.names = colnames(anova_table),
caption="Comparison of group means from regression of domain risk score on diagnosis group, controlling for respondant's education.  Estimated group means and their corresponding standard errors (SE), rounded to two decimal spaces, are provided for each domain.  These comparisons were done for Social Communication and Sensory Regulation domains and Total Risk Score.  For each of these, the p-value and test statistic corresponding to the ANOVA F-test for group differences with degrees of freedom in parentheses is reported, along with the p-values for the post-hoc pairwise comparisons.  The Holm adjustment was used for these pairwise comparisons to correct for multiple comparisons.  Cohen's D is also reported in parentheses for each pairwise comparison, defined as the estimated contrast divided by the residual standard error.") %>%
kable_styling()
dataset_sum_v3 <- dataset_sum_v2 %>%
select(V12.fyi_orientrec:V12.fyi_senproc, Groups_NoAtyp, respond_educ)
# Save construct variable names, create lists to hold ANOVA fit results and table results
construct_vars <- names(dataset_sum_v3)[grepl("fyi", names(dataset_sum_v3))]
anova_frmls <- paste(construct_vars, "Groups_NoAtyp", sep="~")
anova_list <- list()
for_table_list <- list()
F_stat_list <- list()
F_stat_pval_list <- list()
Pairwise_ttest_list <- list()
Pairwise_ttest_list_vect <- list()
cohens_d_list <- list()
cohens_d_list_vect <- list()
order_cohen <- c("Low Risk", "High Risk: ASD", "High Risk: No ASD")
# Run ANOVA analyses for each construct variable; also do F tests for group
for(i in 1:length(construct_vars)){
anova_list[[i]] <- lm(anova_frmls[[i]], data=dataset_sum_v3)
for_table_list_temp <- as.data.frame(lsmeans(anova_list[[i]], specs="Groups_NoAtyp")) %>%
mutate(Mean_SE=paste(round(lsmean,2),
paste("(",round(lower.CL,2),", ",round(upper.CL,2),")",sep=""),sep=" "))  %>%
select(Groups_NoAtyp, Mean_SE)
for_table_list_temp <- t(for_table_list_temp)
colnames(for_table_list_temp) <- for_table_list_temp[1,]
for_table_list_temp <- for_table_list_temp[-1,]
for_table_list_temp <- c("Construct"=construct_vars[[i]], for_table_list_temp)
for_table_list[[i]] <- for_table_list_temp
# Now do F stat calc.
F_stat_list[[i]] <- paste( round(anova(anova_list[[i]])$`F value`[1],2),
paste("(",anova(anova_list[[i]])$Df[1],",",
anova(anova_list[[i]])$Df[2],")", sep=""), sep=" ")
F_stat_pval_list[[i]] <- ifelse(anova(anova_list[[i]])$`Pr(>F)`[1]>0.001,
round(anova(anova_list[[i]])$`Pr(>F)`[1],3),"<0.001")
# Calculate pairwise t-tests
ttest_expression <- paste0("dataset_sum_v3", "$", construct_vars[i])
Pairwise_ttest_list[[i]] <- pairwise.t.test(eval(parse(text=ttest_expression)),
dataset_sum_v3$Groups_NoAtyp)$p.value
Pairwise_ttest_list_vect[[i]] <- ifelse(as.vector(Pairwise_ttest_list[[i]])<0.001,
"<0.001",
round(as.vector(Pairwise_ttest_list[[i]]),3))
# Calc. Cohen's D
cohens_d_list[[i]] <- calc_cohens_d(outcome=construct_vars[i],
group_var = "Groups_NoAtyp",
data=dataset_sum_v3,
order=order_cohen)
cohens_d_list_vect[[i]] <- unlist(cohens_d_list[[i]])
}
## Combine into single table
anova_table <- do.call("rbind", for_table_list)
anova_table <- cbind(anova_table,
"F Statistic"=unlist(F_stat_list),
"P-value"=unlist(F_stat_pval_list))
## Add in multiple comps
cohens_d_table <- do.call("rbind", cohens_d_list_vect)
pairwise_anova <- do.call("rbind", Pairwise_ttest_list_vect)
colnames(pairwise_anova) <- c(paste(colnames(Pairwise_ttest_list[[1]])[1], rownames(Pairwise_ttest_list[[1]]), sep=" vs "),
paste(colnames(Pairwise_ttest_list[[1]])[2], rownames(Pairwise_ttest_list[[1]]), sep=" vs "))
rownames(pairwise_anova) <- NULL
pairwise_anova <- t(t(pairwise_anova)[complete.cases(t(pairwise_anova)),])
pairwise_anova[] <- paste(pairwise_anova,
paste("(",cohens_d_table, ")",sep=""),
sep=" ")
anova_table_final <- cbind(anova_table, pairwise_anova)
kable(anova_table_final,
col.names = colnames(anova_table_final),
caption="Comparison of group means from regression of construct risk score on diagnosis group.  Estimated group means and their corresponding standard errors (SE), rounded to two decimal spaces, are provided for each construct.  For each construct, the p-value and test statistic corresponding to the ANOVA F-test for group differences is reported with degrees of freedom for the F statistic in paretheses, along with the p-values for the post-hoc pairwise comparisons.  The Holm adjustment was used for these pairwise comparisons to correct for multiple comparisons.  Cohen's D effect size is also reported in parentheses for each of these comparisons. ") %>%
kable_styling()
anova_frmls <- paste(construct_vars, "Groups_NoAtyp+respond_educ", sep="~")
anova_list <- list()
for_table_list <- list()
F_stat_list <- list()
F_stat_pval_list <- list()
Pairwise_ttest_list <- list()
Pairwise_ttest_list_vect <- list()
cohens_d_list <- list()
cohens_d_list_vect <- list()
order_cohen <- c("Low Risk", "High Risk: ASD", "High Risk: Atypical")
Contrasts = list(Low_Risk_vs_High_Risk__ASD = c(1,  -1,  0),
Low_Risk_vs_High_Risk__No_ASD = c(1,  0,  -1),
High_Risk__ASD_vs_High_Risk__No_ASD = c( 0,  1, -1))
# Run ANOVA analyses for each construct variable; also do F tests for group
for(i in 1:length(construct_vars)){
anova_list[[i]] <- lm(anova_frmls[[i]], data=dataset_sum_v3)
for_table_list_temp <- as.data.frame(lsmeans(anova_list[[i]], specs="Groups_NoAtyp",
at=list(respond_educ="Coll"))) %>%
mutate(Mean_SE=paste(round(lsmean,2),
paste("(",round(lower.CL,2),", ",round(upper.CL,2),")",sep=""),sep=" "))  %>%
select(Groups_NoAtyp, Mean_SE)
for_table_list_temp <- t(for_table_list_temp)
colnames(for_table_list_temp) <- for_table_list_temp[1,]
for_table_list_temp <- for_table_list_temp[-1,]
for_table_list_temp <- c("Construct"=construct_vars[[i]], for_table_list_temp)
for_table_list[[i]] <- for_table_list_temp
# Now do F stat calc.
F_stat_list[[i]] <- paste( round(anova(anova_list[[i]])$`F value`[1],2),
paste("(",anova(anova_list[[i]])$Df[1],",",
anova(anova_list[[i]])$Df[2],")", sep=""), sep=" ")
F_stat_pval_list[[i]] <- ifelse(anova(anova_list[[i]])$`Pr(>F)`[1]>0.001,
round(anova(anova_list[[i]])$`Pr(>F)`[1],3),"<0.001")
# Calculate pairwise t-tests
soc_com_pairwise_vector <- ifelse(soc_com_pairwise$p.value<0.001, "<0.001",
round(soc_com_pairwise$p.value, 3))
ttest_temp <- contrast(lsmeans(anova_list[[i]], "Groups_NoAtyp",
at=list(respond_educ="Coll")),
Contrasts,
adjust = "holm")
Pairwise_ttest_list[[i]] <- as.data.frame(summary(ttest_temp))[,c("contrast",                                                               "p.value")]
Pairwise_ttest_list_vect[[i]] <- ifelse(Pairwise_ttest_list[[i]]$p.value<0.001, "<0.001",
round(Pairwise_ttest_list[[i]]$p.value, 3))
# Calc. Cohen's D
resid_SE <- sqrt(anova(anova_list[[i]])$`Mean Sq`[3])
cohens_d_list_vect[[i]] <-
round(abs(as.numeric(as.matrix(summary(ttest_temp))[,"estimate"])/resid_SE),3)
}
## Combine into single table
anova_table <- do.call("rbind", for_table_list)
anova_table <- cbind(anova_table,
"F Statistic"=unlist(F_stat_list),
"P-value"=unlist(F_stat_pval_list))
## Add in multiple comps
cohens_d_table <- do.call("rbind", cohens_d_list_vect)
pairwise_anova <- do.call("rbind", Pairwise_ttest_list_vect)
colnames(pairwise_anova) <- gsub("  ", ": ",
gsub("_"," ",Pairwise_ttest_list[[1]]$contrast))
rownames(pairwise_anova) <- NULL
pairwise_anova[] <- paste(pairwise_anova,
paste("(",cohens_d_table, ")",sep=""),
sep=" ")
anova_table_final <- cbind(anova_table, pairwise_anova)
kable(anova_table_final,
col.names = colnames(anova_table_final),
caption="Comparison of group means from regression of construct risk score on diagnosis group, controlling for respondant's education.  Estimated group means and their corresponding standard errors (SE), rounded to two decimal spaces, are provided for each construct.  For each construct, the p-value and test statistic corresponding to the ANOVA F-test for group differences is reported with degrees of freedom for the F statistic in paretheses, along with the p-values for the post-hoc pairwise comparisons.  The Holm adjustment was used for these pairwise comparisons to correct for multiple comparisons.  Cohen's D effect size is also reported in parentheses for each of these comparisons. ") %>%
kable_styling()
dataset_HR_RF <- dataset_HR %>%
select(Identifiers, Groups_2, FYIq_1:FYIq_60)
dataset_HR_RF <- lapply(dataset_HR_RF, FUN=factor) %>% data.frame()
ftable(dataset_HR_RF$Groups_2) # Large imbalance, need to oversample
# Oversample
set.seed(012)
fyi_variables <- names(dataset_HR_RF)[grepl("FYIq_", names(dataset_HR_RF))]
rf_fyi_formula <-
formula(paste0("Groups_2 ~ ", paste0(fyi_variables, collapse = " + ")))
dataset_HR_RF_SMOTE <- as_tibble(DMwR::SMOTE(rf_fyi_formula,
data=data.frame(dataset_HR_RF),
perc.over = 200,
k=5,
learner = NULL))
View(dataset_HR_RF_SMOTE)
View(DMwR::SMOTE)
smote.exs
